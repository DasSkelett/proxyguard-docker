name: docker

on:
  push:
  schedule:
    - cron: "0 9 * * *"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release info
        id: rel_info
        run: |
          curl -sSL -o /tmp/rel_info https://codeberg.org/api/v1/repos/eduVPN/proxyguard/releases/latest
          echo "PG_REL_TAG=$(jq -r .tag_name /tmp/rel_info)" >> "$GITHUB_OUTPUT"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}},value=${{ steps.rel_info.outputs.PG_REL_TAG }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.rel_info.outputs.PG_REL_TAG }}
            type=semver,pattern={{major}},value=${{ steps.rel_info.outputs.PG_REL_TAG }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          build-args: VERSION=${{ steps.rel_info.outputs.PG_REL_TAG }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
